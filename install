#!/bin/bash

usage() {
  cat <<EOF
./install [--help|-h] [<PREFIX=/usr>]

Installs uprocd to <PREFIX> (default: /usr). This will install:

- Command-line binaries to <PREFIX>/bin.
- Internal binaries to <PREFIX>/share/uprocd/bin.
- Default modules to <PREFIX>/share/uprocd/modules.
EOF

  exit $1
}

inst() {
  file="$2"
  dest="$3/`basename $2`"

  case "$1" in
  data) mode=644 ;;
  exec) mode=755 ;;
  *) echo "Invalid mode: $1"; exit 1 ;;
  esac

  echo "- $file -> $dest ($mode)"
  install -Dm "$mode" "$file" "$dest"
}

hasdocs() {
  grep -q CONFIG_DOCS= tup.config
  return $?
}

set -e

[[ "$1" == "-h" || "$1" == "--help" ]] && usage 0 ||:
[[ "$1" == -* ]] && usage 1 ||:

prefix="${1:-/usr}"

inst exec build/uprocctl "$prefix/bin"
inst exec build/u "$prefix/bin"
inst exec build/uprocd "$prefix/share/uprocd/bin"

inst data api/uprocd.h "$prefix/include"

inst data systemd/uprocd@.service "$prefix/lib/systemd/user"

if grep -q CONFIG_PYTHON=yes tup.config; then
  inst exec build/upython "$prefix/bin"
  inst exec build/uipython "$prefix/bin"

  inst exec build/modules/python.so "$prefix/share/uprocd/modules"
  inst data build/modules/python.module "$prefix/share/uprocd/modules"
  inst data build/modules/ipython.module "$prefix/share/uprocd/modules"
  inst data build/modules/_uprocd_modules.py "$prefix/share/uprocd/modules"

  if hasdocs; then
    inst data build/man/python.module.7 "$prefix/share/man/man7"
    ln -sf "$prefix/share/man/man1/u.1" "$prefix/share/man/man1/upython.1"
    ln -sf "$prefix/share/man/man1/u.1" "$prefix/share/man/man1/uipython.1"
  fi
fi

if grep -q CONFIG_RUBY=yes tup.config; then
  inst exec build/uruby "$prefix/bin"

  inst exec build/modules/ruby.so "$prefix/share/uprocd/modules"
  inst data build/modules/ruby.module "$prefix/share/uprocd/modules"
  inst data build/modules/_uprocd_requires.rb "$prefix/share/uprocd/modules"

  if hasdocs; then
    inst data build/man/ruby.module.7 "$prefix/share/man/man7"
    ln -sf "$prefix/share/man/man1/u.1" "$prefix/share/man/man1/uruby.1"
  fi
fi

hasdocs && for man in build/man/*.?; do
  [ $man == python.module.7 ] || [ $man == ruby.module.7 ] && continue
  section=${man##*.}
  inst data $man "$prefix/share/man/man$section"
done ||:
